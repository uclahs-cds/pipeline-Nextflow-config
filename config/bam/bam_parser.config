import java.util.zip.GZIPInputStream
/**
*   This bam_parser namespace is used to parse the header from a BAM file.
*   The information is loaded into a Map.
*/
bam_parser {
    /**
    *   Set up the file reader for the BAM
    */
    get_reader = { String bam_path ->
        InputStream gzip_stream = new GZIPInputStream(new FileInputStream(bam_path))
        BufferedReader reader = new BufferedReader(new InputStreamReader(gzip_stream, 'UTF-8'))

        // Skip 8 characters to skip encoding info
        reader.skip(8)

        return reader
    }

    /**
    *   Parse read group line
    */
    parse_read_group = { String line ->
        def read_group_parts = line.trim().split('\t')[1..-1]
        Map rg_map = [:]
        read_group_parts.each{ part ->
            def split_parts = part.trim().split(':')
            rg_map[split_parts[0]] = split_parts[1..-1].join(':')
        }

        return rg_map
    }

    /**
    *   Main parsing function for calling. Returns parsed data as a Map.
    */
    parse_bam_header = { String bam_path ->
        def bam_reader = bam_parser.get_reader(bam_path)
        def line = bam_reader.readLine()
        def parsed_header = [:]
        parsed_header['read_group'] = []
        while (line && line.startsWith('@')) {
            // Handle different header lines here
            if (line.startsWith('@RG')) {
                parsed_header['read_group'].add(bam_parser.parse_read_group(line))
            }
            line = bam_reader.readLine()
        }

        return parsed_header
    }
}
